options:
  logging: CLOUD_LOGGING_ONLY   # Force logs to Cloud Logging

steps:
  # Step 0: Debug start info
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        echo "üîµ Build started..."
        echo "Commit: $COMMIT_SHA"
        echo "Project: $PROJECT_ID"
        echo "Service Account: $(gcloud auth list --filter=status:ACTIVE --format='value(account)')"
        echo "=============================="

  # Step 1: Build Docker image with logging
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: bash
    args:
      - -c
      - |
        echo "üõ† Starting Docker build..."
        if docker build -t gcr.io/$PROJECT_ID/media:$COMMIT_SHA .; then
          echo "‚úÖ Docker build completed successfully."
        else
          echo "‚ùå Docker build FAILED!"
          exit 1
        fi

  # Step 2: Push Docker image with logging
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: bash
    args:
      - -c
      - |
        echo "üì§ Pushing image to GCR..."
        if docker push gcr.io/$PROJECT_ID/media:$COMMIT_SHA; then
          echo "‚úÖ Image pushed successfully."
        else
          echo "‚ùå Image push FAILED!"
          exit 1
        fi

  # Step 3: Confirm pushed image
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        echo "üîç Latest image tags for media:"
        gcloud container images list-tags gcr.io/$PROJECT_ID/media --limit=5
        echo "üèÅ Build finished."

images:
  - 'gcr.io/$PROJECT_ID/media:$COMMIT_SHA'
